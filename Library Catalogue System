class Book:
  def __init__(self, title, author, available=True):
    self.title = title
    self.author = author
    self.available = available

  def display_info(self):
    print(f"Title: {self.title}")
    print(f"Author: {self.author}")
    print(f"Available: {'Yes' if self.available else 'No'}")

  def check_out(self):
    if self.available:
      self.available = False
      print(f"{self.title} successfully checked out!")
    else:
      print(f"{self.title} is already checked out.")

  def return_book(self):
    if not self.available:
      self.available = True
      print(f"{self.title} successfully returned!")
    else:
      print(f"{self.title} is already available.")

def add_book():
  title = input("Enter book title: ")
  author = input("Enter book author: ")
  return Book(title, author)

def main():
  books = []
  while True:
    choice = input("\nMenu:\n1. Add book\n2. Display catalogue\n3. Check out book\n4. Return book\n5. Exit\nEnter your choice: ")
    if choice == "1":
      book = add_book()
      books.append(book)
      print("Book added successfully!")
    elif choice == "2":
      if not books:
        print("No books in the catalogue yet!")
      else:
        for book in books:
          book.display_info()
          print("=" * 20)
    elif choice == "3":
      title = input("Enter book title to check out: ")
      found = False
      for book in books:
        if book.title == title:
          book.check_out()
          found = True
          break
      if not found:
        print(f"{title} not found in the catalogue.")
    elif choice == "4":
      title = input("Enter book title to return: ")
      found = False
      for book in books:
        if book.title == title:
          book.return_book()
          found = True
          break
      if not found:
        print(f"{title} not found in the catalogue.")
    elif choice == "5":
      print("Exiting...")
      break
    else:
      print("Invalid choice!")

if __name__ == "__main__":
  main()
